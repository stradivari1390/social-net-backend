{
  "openapi": "3.0.1",
  "info": {
    "title": "Microservice account",
    "version": "1.0.0-SNAPSHOT",
    "description": "Сервис аккаунт"
  },
  "servers": [
    {
      "url": "http://ingress",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Account controller",
      "description": "Работа с аккаунтами"
    }
  ],
  "paths": {
    "/api/v1/account": {
      "get": {
        "tags": [
          "Account controller"
        ],
        "summary": "Получение данных аккаунта",
        "description": "Получение данных по email",
        "operationId": "getByEmail",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSecureDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Account controller"
        ],
        "summary": "Обновление аккаунта",
        "description": "Обновление аккаунта",
        "operationId": "update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Account controller"
        ],
        "summary": "Создание аккаунта",
        "description": "Создание аккаунта при регистрации",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/account/me": {
      "get": {
        "tags": [
          "Account controller"
        ],
        "summary": "Получение данных аккаунта",
        "description": "Получение своих данных при входе на сайт",
        "operationId": "get",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Account controller"
        ],
        "summary": "Обновление аккаунта",
        "description": "Обновление авторизованного аккаунта",
        "operationId": "update_1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Account controller"
        ],
        "summary": "Удаление аккаунта",
        "description": "Помечает авторизованный аккаунт как удалённый и через заданное время стирает данные об аккаунте",
        "operationId": "delete",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/account/birthdays": {
      "put": {
        "tags": [
          "Account controller"
        ],
        "summary": "Отправка уведомлений",
        "description": "Отправляет друзьям сообщение о наступившем дне рождении",
        "operationId": "sendBirthdayNotification",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/account/{id}": {
      "get": {
        "tags": [
          "Account controller"
        ],
        "summary": "Получение данных аккаунта",
        "description": "Получение данных по id",
        "operationId": "getById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Account controller"
        ],
        "summary": "Удаление аккаунта",
        "description": "Полность удаляет аккаунт из базы по id",
        "operationId": "deleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/account/unsupported": {
      "get": {
        "tags": [
          "Account controller"
        ],
        "summary": "Получение всех аккаунтов",
        "description": "Позволяет получить все аккаунты, не реализован",
        "operationId": "getAll",
        "parameters": [
          {
            "name": "searchDto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AccountSearchDto"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageAccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/account/statistic": {
      "get": {
        "tags": [
          "Account controller"
        ],
        "summary": "Получение статистики",
        "description": "Позволяет получить статистику по кол-ву регистраций по возрастам и по кол-ву регистраций по месяцам за указанный промежуток времени",
        "operationId": "getAccountStatistic",
        "parameters": [
          {
            "name": "statisticRequestDto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AccountStatisticRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountStatisticResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/account/search": {
      "get": {
        "tags": [
          "Account controller"
        ],
        "summary": "Получение списка аккаунтов",
        "description": "Позволяет получить список аккаунтов по заданным параметрам с использованием спецификации",
        "operationId": "search",
        "parameters": [
          {
            "name": "searchDto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AccountSearchDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageAccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/v1/account/search/statusCode": {
      "get": {
        "tags": [
          "Account controller"
        ],
        "summary": "Получение списка аккаунтов относительно запрашиваемого статуса",
        "description": "Позволяет получать аккаунты относительно запрашиваемого статуса",
        "operationId": "searchByStatusCode",
        "parameters": [
          {
            "name": "searchDto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AccountSearchDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageAccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AccountDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "firstName": {
            "type": "string",
            "description": "Имя"
          },
          "lastName": {
            "type": "string",
            "description": "Фамилия"
          },
          "email": {
            "type": "string",
            "description": "Почтовый адрес"
          },
          "password": {
            "type": "string",
            "description": "Пароль"
          },
          "phone": {
            "type": "string",
            "description": "Номер телефона"
          },
          "photo": {
            "type": "string",
            "description": "Ссылка на cloudinary"
          },
          "profileCover": {
            "type": "string",
            "description": "Ссылка на cloudinary"
          },
          "about": {
            "type": "string",
            "description": "Информация о себе"
          },
          "city": {
            "type": "string",
            "description": "Город"
          },
          "country": {
            "type": "string",
            "description": "Страна"
          },
          "statusCode": {
            "type": "string",
            "description": "Статус отношений",
            "enum": [
              "FRIEND",
              "REQUEST_TO",
              "REQUEST_FROM",
              "BLOCKED",
              "DECLINED",
              "SUBSCRIBED",
              "NONE",
              "WATCHING",
              "REJECTING",
              "RECOMMENDATION"
            ]
          },
          "regDate": {
            "type": "string",
            "description": "Дата регистрации",
            "format": "date-time"
          },
          "birthDate": {
            "type": "string",
            "description": "Дата рождения",
            "format": "date-time"
          },
          "messagePermission": {
            "type": "string",
            "description": "Какая-то ерунда"
          },
          "lastOnlineTime": {
            "type": "string",
            "description": "Время последнего посещения",
            "format": "date-time"
          },
          "isOnline": {
            "type": "boolean",
            "description": "Статус онлайн - true/false"
          },
          "isBlocked": {
            "type": "boolean",
            "description": "Заблокирован ли пользователь для отображения при поиске"
          },
          "emojiStatus": {
            "type": "string",
            "description": "Статус эмодзи"
          },
          "createdOn": {
            "type": "string",
            "description": "Дата регистрации",
            "format": "date-time"
          },
          "updatedOn": {
            "type": "string",
            "description": "Дата обновления аккаунта",
            "format": "date-time"
          },
          "deletionTimestamp": {
            "type": "string",
            "description": "Время пометки на удаление для \"мягкого\" удаления",
            "format": "date-time"
          }
        },
        "description": "Dto аккаунта"
      },
      "AccountSecureDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "firstName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "authorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Authority"
            }
          }
        }
      },
      "Authority": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "authority": {
            "type": "string"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "AccountSearchDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "blockedByIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "author": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "isBlocked": {
            "type": "boolean"
          },
          "statusCode": {
            "type": "string",
            "enum": [
              "FRIEND",
              "REQUEST_TO",
              "REQUEST_FROM",
              "BLOCKED",
              "DECLINED",
              "SUBSCRIBED",
              "NONE",
              "WATCHING",
              "REJECTING",
              "RECOMMENDATION"
            ]
          },
          "ageTo": {
            "type": "integer",
            "format": "int32"
          },
          "ageFrom": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageAccountDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDto"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "unpaged": {
            "type": "boolean"
          },
          "paged": {
            "type": "boolean"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "unsorted": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "AccountStatisticRequestDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "firstMonth": {
            "type": "string",
            "format": "date-time"
          },
          "lastMonth": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AccountCountPerAge": {
        "type": "object",
        "properties": {
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AccountStatisticResponseDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "countPerAge": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountCountPerAge"
            }
          },
          "countPerMonth": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatisticPerDateDto"
            }
          }
        }
      },
      "StatisticPerDateDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}